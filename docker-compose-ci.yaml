version: '3.9'

services:
  db:
    image: postgres:15.2
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    image: yellowcarrot/todolist:${GITHUB_REF_NAME}-${GITHUB_RUN_ID}
    container_name: api
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: "django-insecure-0h#8eu)m_*$mruc%e#he9s&ofl=p=5-kd11$*6w+b_9rape6%0"
      SOCIAL_AUTH_VK_OAUTH2_KEY: ${SOCIAL_AUTH_VK_OAUTH2_KEY}
      SOCIAL_AUTH_VK_OAUTH2_SECRET: ${SOCIAL_AUTH_VK_OAUTH2_SECRET}
    depends_on:
      db:
        condition: service_healthy

  migrations:
    image: yellowcarrot/todolist:${GITHUB_REF_NAME}-${GITHUB_RUN_ID}
    container_name: migrations
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SOCIAL_AUTH_VK_OAUTH2_KEY: ${SOCIAL_AUTH_VK_OAUTH2_KEY}
      SOCIAL_AUTH_VK_OAUTH2_SECRET: ${SOCIAL_AUTH_VK_OAUTH2_SECRET}
    depends_on:
      db:
        condition: service_healthy
    command:
      sh -c "python ./manage.py migrate"

  frontend:
    image: sermalenk/skypro-front:lesson-37
    container_name: front
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
    volumes:
      - django_static:/usr/share/nginx/nginx/html/django_static
volumes:
  django_static:
