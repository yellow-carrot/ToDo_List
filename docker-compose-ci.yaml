version: '3.8'

services:
  db:
    image: postgres:15.2
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    container_name: db
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    image: yellowcarrot/todolist:${GITHUB_REF_NAME}-${GITHUB_RUN_ID}
    container_name: api
    command: python manage.py runserver 0.0.0.0:8000
    env_file: .env
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  frontend:
    image: sermalenk/skypro-front:lesson-38
    container_name: front
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started

volumes:
  db_data:
